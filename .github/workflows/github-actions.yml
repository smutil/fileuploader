name: github-actions
on: [push]
jobs:
    # The "build" workflow
    build:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
  
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.14.0' # The Go version to download (if necessary) and use.
      
      # Install all the dependencies
      - name: Install dependencies
        run: |
          go version
          go get -u github.com/prometheus/client_golang/prometheus/promhttp
          
      # Run build of the application
      - name: build
        run: go build .
      - name: package
        run: tar -cvf fileuploader.tar fileuploader
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: fileuploader.tar
            asset_name: fileuploader-lnx.tar
            asset_content_type: application/tar